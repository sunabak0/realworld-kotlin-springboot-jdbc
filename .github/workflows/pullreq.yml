#
# Lint系をReviewdogやgithub-commentに指摘してもらう
#
# タイミング
# - PullRequest時
#
---

name: PR用 Lint Reviewdog

#
# 'on' にしている理由
# yamllintで怒られるため
#
# 参考: https://github.com/adrienverge/yamllint/issues/430
#
'on':
  pull_request:

#
# reviewdog/action-setup
#
# URL
#   - https://github.com/reviewdog/action-setup
# 概要
#   - reviewdogをセットアップする
#   - 実際に動いているのはこれ
#     - https://github.com/reviewdog/action-setup/blob/master/install.sh
#

#
# reviewdog/action-yamllint
#
# URL
#   - https://github.com/reviewdog/action-yamllint
# 概要
#   - yamllintの結果をreviewdogで指摘させる
#

#
# reviewdog/action-actionlint
#
# URL
#   - https://github.com/reviewdog/action-actionlint
# 概要
#   - actionlintの結果をreviewdogで指摘
#

#
# detektの結果をreviewdogに食わせて、指摘箇所にコメントをするようにする
#
jobs:
  #
  # Kotlinのlint(detekt)
  #
  detekt-and-reviewdog:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3
      - name: Javaの環境をセットアップ
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: reviewdogのセットアップ
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: make lint
        run: make lint
      - name: reviewdog 実行
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat build/reports/detekt/detekt.xml | reviewdog -f=checkstyle -reporter=github-pr-review

  #
  # YAMLのlint(yamllint)
  #
  yamllint-and-reviewdog:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3
      - name: reviewdogのセットアップ
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          filter_mode: diff_context  # 差分のみ(default: added)
          fail_on_error: 'true'  # errorが出たら落ちる(default: 'false')

  #
  # git commit messageのlint(commitlint)
  #
  # 失敗したら、PRにNGな箇所をコメントされる
  #
  commitlint-and-github-comment:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 0 を指定(全ての履歴を持ってくる)
      - name: nodejsのセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: 依存ライブラリのインストール
        run: npm install
      - name: github-commentをインストール
        run: |
          echo '---[ version ]'
          GITHUB_COMMENT_VERSION=5.0.0
          echo '---[ download ]'
          curl -sSfL -o github-comment.tar.gz https://github.com/suzuki-shunsuke/github-comment/releases/download/v${GITHUB_COMMENT_VERSION}/github-comment_${GITHUB_COMMENT_VERSION}_linux_amd64.tar.gz
          echo '---[ checksum: ファイル改ざんor壊れていないか ]'
          echo 1da8cb9d52395018ec15f876347e204fe632c833baa1831ca36302dec1e0f97a  github-comment.tar.gz | sha256sum -c
          echo '---[ unzip ]'
          sudo tar -C /usr/bin -xzf ./github-comment.tar.gz
          echo '---[ show version ]'
          github-comment -v
      - name: commitlint
        run: |
          echo '---[ 古いコメントを隠す ]'
          github-comment hide -condition 'Comment.Body contains "ⓘ   Get help: https://"'
          echo '---[ PR title に対してcommitlint ]'
          github-comment exec -- echo "$PR_TITLE" | npx commitlint --verbose
          echo '---[ commitlint ]'
          github-comment exec -- npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ github.event.pull_request.title }}

  #
  # labeler
  #
  # PullReq時、PRにラベルを付与
  #
  triage:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: PRにラベルを付与
        uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          sync-labels: true  # force push等で、途中で結局対象ではなくなったら、そのラベルを削除

  #
  # actionlint
  #
  # GitHub Actionのlint(actionlint)
  #
  actionlint-and-reviewdog:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3
      - name: actionlint
        uses: reviewdog/action-actionlint@v1
